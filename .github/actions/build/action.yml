name: 'Build'
description: 'Build action.'
inputs:
  aws-access-key-id:
    description: 'AWS Access Key ID'
    required: true
  aws-region:
    description: 'AWS AMI Region'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  environment:
    description: 'The Conexed environment.'
    required: true
runs:
  using: "composite"
  steps:
    - name: Configure Prod AWS credentials
      if: ${{ inputs.environment == 'prod' }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.QA_GITHUB_ACTIONS_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.QA_GITHUB_ACTIONS_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
        mask-aws-account-id: 'no'

    - name: Configure AWS credentials
      if: ${{ inputs.environment == ( 'qa' || 'test' ) }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.QA_GITHUB_ACTIONS_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.QA_GITHUB_ACTIONS_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
        mask-aws-account-id: 'no'

    # - name: Login to Amazon ECR
    #   id: ecr-login
    #   uses: aws-actions/amazon-ecr-login@v1

    # - name: Install AWS CLI
    #   uses: unfor19/install-aws-cli-action@v1

    # - name: Setup Node
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: "14"
    #     cache: 'npm'

    - name: Build Client
      shell: bash
      run: |
        cd client/
        ./npm
        aws ec2 describe-regions

    # - name: Build New Client
    #   run: |
    #     cd classrooms/client-new
    #     npm install
    #     npm run build:prod

    # - name: Build Groups Client
    #   run: |
    #     cd classrooms/client/groups
    #     npm install
    #     npm run build:prod

    # - name: Cache SBT
    #   uses: actions/cache@v2
    #   with:
    #     path: |
    #       ~/.ivy2/cache
    #       ~/.sbt
    #     key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}

    # - name: SBT dist
    #   id: sbt
    #   uses: ./classrooms/.github/actions/sbt/
    #   with:
    #     commands: dist
    #     sbt_project_directory: ./classrooms

    # - name: Build and tag image.
    #   env:
    #     ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
    #     ECR_REPOSITORY: classrooms
    #   run: |
    #     cd classrooms
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f conexed-classrooms.production.Dockerfile .
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

